@page "/fetchproducts"

<h3>Product List</h3>

@if (products == null)
{
    <p>Loading...</p>
}
else if (products.Length == 0)
{
    <p>No products available.</p>
}
else
{
    <ul>
        @foreach (var product in products)
        {
            <li>@product.Name (@product.Category.Name) - $@product.Price</li>
        }
    </ul>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">Error: @errorMessage</p>
}

@code {
    private Product[]? products;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            HttpClient httpClient = new HttpClient { BaseAddress = new Uri("https://localhost:7031") };
            products = await httpClient.GetFromJsonAsync<Product[]>("/api/products");
        }
        catch (HttpRequestException ex)
        {
            errorMessage = "Failed to fetch products. Please try again later.";
            Console.Error.WriteLine($"HTTP Request Error: {ex.Message}");
        }
        catch (Exception ex)
        {
            errorMessage = "An unexpected error occurred.";
            Console.Error.WriteLine($"General Error: {ex.Message}");
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public double Price { get; set; }
        public int Stock { get; set; }
        public Category Category { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
}
